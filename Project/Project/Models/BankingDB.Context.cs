//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BankingDBEntities : DbContext
    {
        public BankingDBEntities()
            : base("name=BankingDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Admin_Table> Admin_Table { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Debit_Card_Details> Debit_Card_Details { get; set; }
        public virtual DbSet<Internet_Banking_Details> Internet_Banking_Details { get; set; }
        public virtual DbSet<OtpRequest> OtpRequests { get; set; }
        public virtual DbSet<Payee> Payees { get; set; }
        public virtual DbSet<RegisterAccount> RegisterAccounts { get; set; }
        public virtual DbSet<RejectedAccount> RejectedAccounts { get; set; }
        public virtual DbSet<SupportMessage> SupportMessages { get; set; }
        public virtual DbSet<Transaction_Details> Transaction_Details { get; set; }
    
        [DbFunction("BankingDBEntities", "fn_AdminLogin")]
        public virtual IQueryable<fn_AdminLogin_Result> fn_AdminLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_AdminLogin_Result>("[BankingDBEntities].[fn_AdminLogin](@email, @password)", emailParameter, passwordParameter);
        }
    
        [DbFunction("BankingDBEntities", "fn_CustomerLogin")]
        public virtual IQueryable<fn_CustomerLogin_Result> fn_CustomerLogin(string email, string login_password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var login_passwordParameter = login_password != null ?
                new ObjectParameter("login_password", login_password) :
                new ObjectParameter("login_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CustomerLogin_Result>("[BankingDBEntities].[fn_CustomerLogin](@email, @login_password)", emailParameter, login_passwordParameter);
        }
    
        [DbFunction("BankingDBEntities", "fn_GetPayee")]
        public virtual IQueryable<fn_GetPayee_Result> fn_GetPayee(Nullable<int> payee_Id)
        {
            var payee_IdParameter = payee_Id.HasValue ?
                new ObjectParameter("Payee_Id", payee_Id) :
                new ObjectParameter("Payee_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetPayee_Result>("[BankingDBEntities].[fn_GetPayee](@Payee_Id)", payee_IdParameter);
        }
    
        [DbFunction("BankingDBEntities", "fn_GetStatement")]
        public virtual IQueryable<fn_GetStatement_Result> fn_GetStatement(Nullable<int> account_number, Nullable<System.DateTime> from_date, Nullable<System.DateTime> to_date)
        {
            var account_numberParameter = account_number.HasValue ?
                new ObjectParameter("Account_number", account_number) :
                new ObjectParameter("Account_number", typeof(int));
    
            var from_dateParameter = from_date.HasValue ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(System.DateTime));
    
            var to_dateParameter = to_date.HasValue ?
                new ObjectParameter("to_date", to_date) :
                new ObjectParameter("to_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetStatement_Result>("[BankingDBEntities].[fn_GetStatement](@Account_number, @from_date, @to_date)", account_numberParameter, from_dateParameter, to_dateParameter);
        }
    
        public virtual int Sp_AddPayee(string beneficiary_name, Nullable<int> from_account, Nullable<int> to_account, string nickname)
        {
            var beneficiary_nameParameter = beneficiary_name != null ?
                new ObjectParameter("beneficiary_name", beneficiary_name) :
                new ObjectParameter("beneficiary_name", typeof(string));
    
            var from_accountParameter = from_account.HasValue ?
                new ObjectParameter("from_account", from_account) :
                new ObjectParameter("from_account", typeof(int));
    
            var to_accountParameter = to_account.HasValue ?
                new ObjectParameter("to_account", to_account) :
                new ObjectParameter("to_account", typeof(int));
    
            var nicknameParameter = nickname != null ?
                new ObjectParameter("nickname", nickname) :
                new ObjectParameter("nickname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_AddPayee", beneficiary_nameParameter, from_accountParameter, to_accountParameter, nicknameParameter);
        }
    
        public virtual int Sp_ChangeLoginPassword(Nullable<int> account_number, string old_password, string new_password)
        {
            var account_numberParameter = account_number.HasValue ?
                new ObjectParameter("account_number", account_number) :
                new ObjectParameter("account_number", typeof(int));
    
            var old_passwordParameter = old_password != null ?
                new ObjectParameter("old_password", old_password) :
                new ObjectParameter("old_password", typeof(string));
    
            var new_passwordParameter = new_password != null ?
                new ObjectParameter("new_password", new_password) :
                new ObjectParameter("new_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ChangeLoginPassword", account_numberParameter, old_passwordParameter, new_passwordParameter);
        }
    
        public virtual int Sp_ChangeTransactionPassword(Nullable<int> account_number, string old_password, string new_password)
        {
            var account_numberParameter = account_number.HasValue ?
                new ObjectParameter("account_number", account_number) :
                new ObjectParameter("account_number", typeof(int));
    
            var old_passwordParameter = old_password != null ?
                new ObjectParameter("old_password", old_password) :
                new ObjectParameter("old_password", typeof(string));
    
            var new_passwordParameter = new_password != null ?
                new ObjectParameter("new_password", new_password) :
                new ObjectParameter("new_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ChangeTransactionPassword", account_numberParameter, old_passwordParameter, new_passwordParameter);
        }
    
        public virtual int Sp_CreateAccount(Nullable<int> service_Reference_Number, Nullable<int> id)
        {
            var service_Reference_NumberParameter = service_Reference_Number.HasValue ?
                new ObjectParameter("Service_Reference_Number", service_Reference_Number) :
                new ObjectParameter("Service_Reference_Number", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreateAccount", service_Reference_NumberParameter, idParameter);
        }
    
        public virtual int Sp_CreateDebitCard(Nullable<int> account_Number)
        {
            var account_NumberParameter = account_Number.HasValue ?
                new ObjectParameter("Account_Number", account_Number) :
                new ObjectParameter("Account_Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreateDebitCard", account_NumberParameter);
        }
    
        public virtual int Sp_CreateInternetBanking(Nullable<int> account_Number, string login_password, string transaction_password)
        {
            var account_NumberParameter = account_Number.HasValue ?
                new ObjectParameter("Account_Number", account_Number) :
                new ObjectParameter("Account_Number", typeof(int));
    
            var login_passwordParameter = login_password != null ?
                new ObjectParameter("login_password", login_password) :
                new ObjectParameter("login_password", typeof(string));
    
            var transaction_passwordParameter = transaction_password != null ?
                new ObjectParameter("transaction_password", transaction_password) :
                new ObjectParameter("transaction_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_CreateInternetBanking", account_NumberParameter, login_passwordParameter, transaction_passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_MakeTransaction(Nullable<int> from_Account, Nullable<int> to_Account, string transaction_Mode, Nullable<int> amount, Nullable<System.DateTime> transaction_Date, string remarks, string transaction_password)
        {
            var from_AccountParameter = from_Account.HasValue ?
                new ObjectParameter("From_Account", from_Account) :
                new ObjectParameter("From_Account", typeof(int));
    
            var to_AccountParameter = to_Account.HasValue ?
                new ObjectParameter("To_Account", to_Account) :
                new ObjectParameter("To_Account", typeof(int));
    
            var transaction_ModeParameter = transaction_Mode != null ?
                new ObjectParameter("Transaction_Mode", transaction_Mode) :
                new ObjectParameter("Transaction_Mode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var transaction_DateParameter = transaction_Date.HasValue ?
                new ObjectParameter("Transaction_Date", transaction_Date) :
                new ObjectParameter("Transaction_Date", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var transaction_passwordParameter = transaction_password != null ?
                new ObjectParameter("transaction_password", transaction_password) :
                new ObjectParameter("transaction_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_MakeTransaction", from_AccountParameter, to_AccountParameter, transaction_ModeParameter, amountParameter, transaction_DateParameter, remarksParameter, transaction_passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_RaiseSupportMessage(string userEmail, string subject, string message)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_RaiseSupportMessage", userEmailParameter, subjectParameter, messageParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Register_Account(string title, string first_Name, string middle_Name, string last_Name, string father_Name, Nullable<long> mobile_Number, string email_Id, string aadhar, string gender, Nullable<System.DateTime> date_Of_Birth, string residential_Address, string permanent_Address, string occupation_Type, string source_Of_Income, Nullable<double> gross_Annual_Income, Nullable<bool> opt_Debit_Card, Nullable<bool> opt_Net_Banking)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var middle_NameParameter = middle_Name != null ?
                new ObjectParameter("Middle_Name", middle_Name) :
                new ObjectParameter("Middle_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var mobile_NumberParameter = mobile_Number.HasValue ?
                new ObjectParameter("Mobile_Number", mobile_Number) :
                new ObjectParameter("Mobile_Number", typeof(long));
    
            var email_IdParameter = email_Id != null ?
                new ObjectParameter("Email_Id", email_Id) :
                new ObjectParameter("Email_Id", typeof(string));
    
            var aadharParameter = aadhar != null ?
                new ObjectParameter("Aadhar", aadhar) :
                new ObjectParameter("Aadhar", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var date_Of_BirthParameter = date_Of_Birth.HasValue ?
                new ObjectParameter("Date_Of_Birth", date_Of_Birth) :
                new ObjectParameter("Date_Of_Birth", typeof(System.DateTime));
    
            var residential_AddressParameter = residential_Address != null ?
                new ObjectParameter("Residential_Address", residential_Address) :
                new ObjectParameter("Residential_Address", typeof(string));
    
            var permanent_AddressParameter = permanent_Address != null ?
                new ObjectParameter("Permanent_Address", permanent_Address) :
                new ObjectParameter("Permanent_Address", typeof(string));
    
            var occupation_TypeParameter = occupation_Type != null ?
                new ObjectParameter("Occupation_Type", occupation_Type) :
                new ObjectParameter("Occupation_Type", typeof(string));
    
            var source_Of_IncomeParameter = source_Of_Income != null ?
                new ObjectParameter("Source_Of_Income", source_Of_Income) :
                new ObjectParameter("Source_Of_Income", typeof(string));
    
            var gross_Annual_IncomeParameter = gross_Annual_Income.HasValue ?
                new ObjectParameter("Gross_Annual_Income", gross_Annual_Income) :
                new ObjectParameter("Gross_Annual_Income", typeof(double));
    
            var opt_Debit_CardParameter = opt_Debit_Card.HasValue ?
                new ObjectParameter("Opt_Debit_Card", opt_Debit_Card) :
                new ObjectParameter("Opt_Debit_Card", typeof(bool));
    
            var opt_Net_BankingParameter = opt_Net_Banking.HasValue ?
                new ObjectParameter("Opt_Net_Banking", opt_Net_Banking) :
                new ObjectParameter("Opt_Net_Banking", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Register_Account", titleParameter, first_NameParameter, middle_NameParameter, last_NameParameter, father_NameParameter, mobile_NumberParameter, email_IdParameter, aadharParameter, genderParameter, date_Of_BirthParameter, residential_AddressParameter, permanent_AddressParameter, occupation_TypeParameter, source_Of_IncomeParameter, gross_Annual_IncomeParameter, opt_Debit_CardParameter, opt_Net_BankingParameter);
        }
    
        public virtual int Sp_RejectAccount(Nullable<int> service_Reference_Number, Nullable<int> id, string remarks)
        {
            var service_Reference_NumberParameter = service_Reference_Number.HasValue ?
                new ObjectParameter("Service_Reference_Number", service_Reference_Number) :
                new ObjectParameter("Service_Reference_Number", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_RejectAccount", service_Reference_NumberParameter, idParameter, remarksParameter);
        }
    }
}
